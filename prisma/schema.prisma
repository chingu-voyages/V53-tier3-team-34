generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  password String
  events   Event[]
  sessions Session[]
}

model Event {
  id                   String     @id @default(uuid())
  title                String
  description          String?
  guestHonor           String?
  host                 String?
  requireGuestApproval Boolean    @default(false)
  authorId             String
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  address              String?
  costPerPerson        Float?
  isOutdoor            Boolean    @default(false)
  isPublic             Boolean    @default(false)
  reason               String?
  style                String?
  image                Bytes?
  maxGuestLimit        Int?
  userGuestLimit       Int?
  imageUrl             String?
  endDateTime          DateTime
  startDateTime        DateTime
  chips                Chip[]
  author               User       @relation(fields: [authorId], references: [id])
  rsvpMoods            RSVPMood[]
}

model RSVPMood {
  value   String  @unique
  emoji   String?
  eventId String?
  Event   Event?  @relation(fields: [eventId], references: [id])
}

model Chip {
  value      String  @unique
  inputValue String
  eventId    String?
  Event      Event?  @relation(fields: [eventId], references: [id])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  expires      DateTime
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ImageType {
  id String @id @default(uuid())
  imageUrl String
  imageChipType String
}
